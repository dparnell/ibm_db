=begin
ActiveRecord::Schema.define do

  execute "DROP TABLE COMMENTS" rescue nil
  execute "DROP TABLE POSTS" rescue nil
  execute "DROP TABLE ITEMS" rescue nil
  execute "DROP TABLE TOPICS" rescue nil
  execute "DROP TABLE fk_test_has_fk" rescue nil
  execute "DROP TABLE fk_test_has_pk" rescue nil
  execute "DROP TABLE CIRCLES" rescue nil
  execute "DROP TABLE SQUARES" rescue nil
  execute "DROP TABLE TRIANGLES" rescue nil
  execute "DROP TABLE NON_POLY_ONES" rescue nil
  execute "DROP TABLE NON_POLY_TWOS" rescue nil
  execute "DROP TABLE PAINT_COLORS" rescue nil
  execute "DROP TABLE PAINT_TEXTURES" rescue nil
  
execute <<_SQL
  CREATE TABLE comments (
    id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 100),
    post_id INT NOT NULL,
    type VARCHAR(255) DEFAULT NULL,
    body VARCHAR(3000)NOT NULL,
    PRIMARY KEY (id)
  );
_SQL

execute <<_SQL
  CREATE UNIQUE INDEX comments_id_idx ON comments(id);
_SQL

execute <<_SQL  
  CREATE TABLE posts (
    id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 100),
    author_id INT DEFAULT NULL,
    title VARCHAR(255) NOT NULL,
    type VARCHAR(255) DEFAULT NULL,
    body VARCHAR(3000) NOT NULL,
    comments_count integer DEFAULT 0,
    taggings_count integer DEFAULT 0,
    PRIMARY KEY (id)
  );
  
_SQL

execute <<_SQL
  CREATE UNIQUE INDEX posts_id_idx ON posts(id);
_SQL

execute <<_SQL
  CREATE TABLE fk_test_has_pk (
    id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 100),
    PRIMARY KEY (id)
  );
_SQL

execute <<_SQL
  CREATE UNIQUE INDEX fk_has_pk_id_idx ON fk_test_has_pk(id);
_SQL

execute <<_SQL
  CREATE TABLE fk_test_has_fk (
    id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 100),
    fk_id integer NOT NULL,
    PRIMARY KEY (id),
    FOREIGN KEY (fk_id) REFERENCES fk_test_has_pk(id)
  );
_SQL

execute <<_SQL
  CREATE UNIQUE INDEX fk_has_fk_id_idx ON fk_test_has_fk(id);
_SQL

execute <<_SQL
  CREATE TABLE items (
    id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 100),
    name VARCHAR(255) DEFAULT NULL,
    PRIMARY KEY (id)
  );
  
_SQL

execute <<_SQL
  CREATE UNIQUE INDEX items_id_idx ON items(id);
_SQL

execute <<_SQL
  CREATE TABLE circles (
    id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
    PRIMARY KEY (id)
  );
_SQL

execute <<_SQL
  CREATE UNIQUE INDEX circles_id_idx ON circles(id);
_SQL

execute <<_SQL
  CREATE TABLE squares(
    id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
    PRIMARY KEY (id)
  );
_SQL

execute <<_SQL
  CREATE UNIQUE INDEX squares_id_idx ON squares(id);
_SQL

execute <<_SQL
  CREATE TABLE triangles(
    id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
    PRIMARY KEY (id)
  );
_SQL

execute <<_SQL
  CREATE UNIQUE INDEX triangles_id_idx ON triangles(id);
_SQL

execute <<_SQL
  CREATE TABLE non_poly_ones(
    id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
    PRIMARY KEY (id)
  );
_SQL

execute <<_SQL
  CREATE UNIQUE INDEX non_poly_ones_id_idx ON non_poly_ones(id);
_SQL

execute <<_SQL
  CREATE TABLE non_poly_twos(
    id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
    PRIMARY KEY (id)
  );
_SQL

execute <<_SQL
  CREATE UNIQUE INDEX non_poly_twos_id_idx ON non_poly_twos(id);
_SQL

execute <<_SQL
  CREATE TABLE paint_colors(
    id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
    non_poly_one_id INT,
    PRIMARY KEY (id)
  );
_SQL

execute <<_SQL
  CREATE UNIQUE INDEX paint_colors_id_idx ON paint_colors(id);
_SQL

execute <<_SQL
  CREATE TABLE paint_textures(
    id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
    non_poly_two_id INT,
    PRIMARY KEY (id)
  );
_SQL

execute <<_SQL
  CREATE UNIQUE INDEX paint_textures_id_idx ON paint_textures(id);
_SQL

execute <<_SQL
  CREATE TABLE topics (
    id INT GENERATED BY DEFAULT AS IDENTITY (START WITH 100),
    title VARCHAR(255) DEFAULT NULL,
    author_name VARCHAR(255) DEFAULT NULL,
    author_email_address VARCHAR(255) DEFAULT NULL,
    written_on TIMESTAMP DEFAULT NULL,
    bonus_time TIME DEFAULT NULL,
    last_read DATE DEFAULT NULL,
    content VARCHAR(3000),
    approved SMALLINT DEFAULT 1,
    replies_count INT DEFAULT 0,
    parent_id INT DEFAULT NULL,
    parent_title VARCHAR(255) DEFAULT NULL,
    type VARCHAR(50) DEFAULT NULL,
    group VARCHAR(50) DEFAULT NULL,
    PRIMARY KEY (id)
  );
  
_SQL

execute <<_SQL
  CREATE UNIQUE INDEX topics_id_idx ON topics(id);
_SQL

execute <<_SQL
  CREATE UNIQUE INDEX movies_id_idx ON movies(movieid);
_SQL

execute <<_SQL
  CREATE UNIQUE INDEX auto_id_tests_id_idx ON auto_id_tests(auto_id);
_SQL

execute <<_SQL
  CREATE UNIQUE INDEX mixed_case_monkeys_id_idx ON mixed_case_monkeys(monkeyID);
_SQL

execute <<_SQL
  CREATE UNIQUE INDEX keyboards_id_idx ON keyboards(key_number);
_SQL

end
=end